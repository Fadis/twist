#include <array>
#include <vector>
#include <boost/range/algorithm/copy.hpp>
#include <boost/range/algorithm/equal.hpp>
#include <boost/range/adaptor/reversed.hpp>
#include <boost/range/reference.hpp>
#include <boost/range/value_type.hpp>
#include <boost/mpl/vector.hpp>
#include <boost/mpl/pair.hpp>
#include <boost/mpl/lambda.hpp>
#include <boost/mpl/equal_to.hpp>
#include <boost/mpl/find_if.hpp>
#include <twist/iterator/traversal.hpp>
#include <twist/base64/base64_traits.hpp>
#include <twist/range/adaptor/base64_encoding.hpp>
#include <twist/range/adaptor/base64_decoding.hpp>
#include <twist/range/is_expected_traversal.hpp>

#define BOOST_TEST_DYN_LINK
#define BOOST_TEST_MODULE range_adaptor_base64
#include <boost/test/unit_test.hpp>
using namespace boost::unit_test_framework;

const std::vector< uint8_t > random_data{{
0x73,0x98,0xac,0xdd,0x47,0xcd,0xb0,0xa1,0x06,0xdb,0xb6,0x44,0xe6,0xb6,0x74,0x25,
0xa1,0xa8,0x1b,0x2c,0xc5,0xb3,0x3d,0x01,0x90,0xdf,0xae,0xc1,0x04,0x81,0x5d,0x06,
0x3c,0xa5,0xf6,0x5b,0xef,0x23,0x3e,0x1d,0x0f,0x2e,0x13,0xa6,0x84,0x8b,0x78,0xd0,
0xac,0xd3,0x1c,0xc0,0x54,0x5e,0x13,0x47,0xab,0xe5,0x75,0x2a,0x13,0x53,0x05,0x4e,
0x20,0x37,0x44,0xb0,0xf3,0x1e,0xe6,0xb7,0x21,0xff,0xd7,0x21,0x6a,0x28,0xe1,0x49,
0xeb,0x9f,0x52,0x1f,0x40,0x49,0xf2,0xdc,0x97,0xe7,0x1d,0x63,0xe6,0x03,0x76,0x3c,
0xd1,0xfa,0xba,0xad,0x69,0xcd,0xe3,0x25,0xd0,0x19,0x14,0x7b,0x19,0x26,0x6e,0x0a,
0xe8,0x39,0x36,0x1a,0x7a,0xd4,0x9a,0xa7,0x0c,0xf2,0x46,0x9d,0x91,0x1d,0xba,0x43,
0x55,0xce,0x40,0xa0,0x54,0xd5,0x22,0x23,0xb6,0x13,0xd4,0x17,0xca,0xc5,0xd0,0xb8,
0xb2,0xe9,0x6c,0x31,0xec,0x55,0xf7,0x50,0x5f,0x41,0x25,0xd1,0x99,0xfe,0xd8,0x89,
0x80,0x80,0x76,0x93,0xd4,0xb6,0xb9,0xd0,0x09,0xf3,0x70,0x49,0xe8,0xc5,0x98,0xe7,
0x91,0xef,0x90,0x39,0x22,0xe4,0xc2,0x09,0x44,0xc6,0x10,0x01,0xab,0xe2,0x5a,0xf2,
0xb8,0x45,0x15,0x05,0x0b,0x9b,0xd3,0xc3,0x16,0x4d,0x34,0xed,0xf1,0xae,0xf2,0x13,
0x3a,0xc2,0xa4,0x20,0x71,0x09,0x98,0x65,0xb3,0x2a,0x39,0x74,0xcf,0x55,0x76,0x2f,
0x69,0x9b,0xa1,0xf6,0x0f,0x42,0x85,0x4b,0x97,0x7b,0x7f,0xbd,0x56,0x3b,0xa2,0xfd,
0x5f,0x18,0xdb,0xfc,0x61,0xb1,0xa0,0xba,0xe3,0xbf,0x64,0x66,0x76,0x4c,0xdf,0xeb,
0xc2,0x1f,0x38,0x10,0xa4,0x1a,0x2b,0xf8,0x59,0xf2,0x7b,0x8c,0x3a,0x22,0x82,0xfd,
0xf7,0xac,0x51,0xaa,0x8c,0x38,0x92,0x28,0x10,0xe7,0x24,0xa6,0xa7,0xeb,0x2d,0xf1,
0x70,0x26,0x71,0xb7,0xd3,0x28,0xd7,0x68,0xfc,0x4a,0x68,0xd4,0xbd,0xc1,0xe5,0xff,
0xfc,0x6b,0xa7,0x43,0x06,0x8c,0xc5,0xf1,0xec,0x27,0x68,0x68,0x9f,0x7a,0x2b,0xb4,
0x59,0x8a,0xde,0xc3,0xff,0x11,0x85,0x19,0xa2,0x55,0x5b,0xec,0xfc,0xe5,0x83,0x58,
0x1c,0xf0,0x4a,0xd3,0x19,0x91,0xcd,0x39,0x06,0x90,0x71,0x5b,0x58,0x46,0xa2,0x68,
0x75,0x41,0xe8,0xce,0x2d,0xbb,0x3f,0x9d,0x5b,0x6f,0x83,0x80,0x21,0x62,0x0d,0xed,
0xb8,0x7e,0x8a,0xe4,0x2b,0x9e,0xc4,0x28,0xfb,0x39,0xab,0xf5,0xf5,0x3a,0x39,0xf1,
0x1a,0xa2,0xb7,0xa5,0x72,0x10,0xdb,0x4e,0xe8,0xc1,0x0b,0xaf,0xc7,0x6b,0xdf,0xe8,
0x1e,0x16,0x4c,0x20,0x53,0x40,0xcf,0xc7,0x18,0x02,0x5d,0x8d,0xdb,0xc3,0x56,0x41,
0x54,0x6f,0x1d,0xda,0x3f,0x90,0xb3,0x51,0x11,0x99,0x63,0x01,0xce,0x93,0xcc,0x26,
0x9f,0x1d,0x5f,0xc1,0xa2,0xcc,0x14,0x06,0x58,0xb8,0x43,0xfd,0x56,0x6c,0x60,0x09,
0xa8,0xf7,0x08,0x63,0x85,0x20,0x30,0x37,0xae,0x03,0x3a,0xdc,0x3d,0x46,0x95,0xda,
0x4a,0xcd,0xe2,0xe9,0x23,0x3c,0xab,0x6a,0x25,0xbc,0xa3,0xa6,0xcd,0xe4,0x3f,0xba,
0x0e,0x6f,0xda,0x54,0x63,0x50,0x8e,0x51,0x68,0xbb,0x07,0x7f,0x23,0xca,0x64,0xd9,
0xa4,0x87,0x31,0xb8,0x8e,0xb4,0x12,0x62,0x0b,0x84,0x9f,0x68,0x28,0x3e,0xee,0xe8,
0xad,0xc6,0x5d,0xc4,0x0b,0x64,0xcb,0x48,0x5f,0xf6,0xcb,0x6d,0xb0,0xf8,0x5a,0x89,
0x87,0x51,0x4f,0x90,0x9d,0xf8,0xe7,0x92,0xf8,0x9b,0xe7,0x20,0xef,0xe8,0x1c,0xf8,
0x1a,0xe0,0x95,0xf4,0x7b,0x5e,0x4a,0x05,0xcc,0x86,0x4c,0x19,0x95,0x97,0x41,0x4e,
0x9d,0x1a,0x2d,0x22,0x49,0xa2,0xa2,0xe5,0x1c,0x26,0xea,0x56,0xde,0x1e,0xfe,0xd9,
0xa9,0xf0,0x4b,0x4d,0xf4,0xd5,0x1e,0xc5,0x97,0x63,0xd1,0x81,0xdd,0x12,0x15,0x88,
0xc9,0x4b,0xc7,0xe0,0xdb,0xd3,0xa2,0x04,0x0e,0x2f,0x75,0xcc,0xf4,0x31,0x72,0xb0,
0x2b,0x99,0xbb,0x66,0xb1,0x76,0x87,0x2e,0xe8,0xcd,0x9d,0xca,0x8c,0xc6,0x54,0xb5,
0x07,0x65,0xc9,0x04,0x33,0x77,0x5b,0x18,0x65,0x9b,0xab,0x48,0x7a,0x3b,0xbc,0x56,
0x0a,0xfe,0x76,0x81,0xb3,0x3c,0xdb,0xad,0x45,0xda,0x6e,0xb3,0x02,0x27,0x56,0xc2,
0x9c,0xdd,0xbe,0x41,0xc2,0x1c,0xe9,0x29,0x94,0x66,0x22,0x05,0xac,0xa4,0x57,0x57,
0x06,0x19,0x6b,0x62,0x50,0x90,0x68,0x15,0xfc,0x53,0xc4,0x05,0x6f,0xca,0xe2,0xda,
0xbd,0xb3,0x9f,0x2c,0x69,0xc5,0xd6,0x6b,0xe4,0xd7,0x62,0xd6,0x1a,0xa1,0xde,0x69,
0x77,0x6a,0xb1,0x62,0x17,0x92,0x55,0x5e,0x50,0x72,0x67,0x50,0x9c,0xa2,0xb1,0x9a,
0xa6,0xe6,0x67,0x2e,0x58,0xa7,0x05,0xe5,0x47,0x6a,0xf0,0x6d,0x30,0xbd,0x71,0x2d,
0x6a,0xea,0x2d,0xac,0x89,0xaf,0xf1,0x32,0xf5,0x8f,0xc3,0x0f,0xef,0xff,0x99,0x2b,
0xba,0xe9,0xb0,0xac,0x94,0x81,0x3d,0x0a,0x6b,0x84,0xee,0x5f,0xa2,0xb4,0x93,0x66,
0x3c,0xc5,0xf0,0x23,0x85,0x8b,0xd8,0xdf,0x81,0x18,0xca,0xb8,0x39,0x63,0x0f,0xb2,
0x14,0x8a,0x2f,0x0f,0x7d,0x37,0xf8,0x63,0xa7,0x06,0xc0,0xef,0x61,0x47,0xf4,0x7c,
0xd2,0x74,0xdd,0x4d,0x71,0x1c,0x78,0xca,0xab,0x9f,0x2c,0x3d,0x10,0xea,0x71,0xd5,
0x4e,0xff,0xb4,0x8c,0x1d,0x05,0xd3,0x75,0xe2,0x63,0xed,0x2b,0x4c,0xb2,0x08,0xaa,
0xb2,0xa9,0x1b,0x6f,0xfe,0x9c,0xf1,0x7f,0x0f,0x61,0xd0,0x94,0x23,0x97,0x24,0x17,
0x05,0x55,0xa6,0x92,0xb0,0x6c,0xc8,0xa9,0x43,0x28,0x34,0x14,0xd3,0xf6,0xbf,0x5f,
0x7e,0xc8,0x70,0xa2,0x7e,0x1c,0x0a,0x00,0x6d,0x96,0x43,0xdb,0x28,0x8a,0xaa,0xae,
0x60,0x5f,0xc7,0xc7,0x62,0x31,0xea,0x7f,0x05,0xa5,0xa3,0x95,0x66,0xd3,0x5b,0x9e,
0x69,0x11,0xc8,0x83,0xd3,0xbb,0xa9,0x64,0x52,0x93,0x29,0xb7,0x11,0x48,0xa8,0x2a,
0xe7,0xaa,0xa2,0x4b,0x2c,0xbe,0xeb,0x05,0xae,0xdb,0x31,0x4e,0x2e,0x95,0xed,0xf6,
0xf0,0x2f,0xe0,0x61,0x2d,0xc7,0x6d,0x9a,0x9b,0xd2,0x2a,0xf9,0xc6,0x54,0x80,0xed,
0x4f,0x62,0x43,0x7c,0xd5,0x00,0xe3,0x25,0x5b,0x16,0xfe,0x05,0xaf,0x14,0x4c,0xba,
0x88,0xa6,0xe0,0x96,0x60,0x9d,0x3f,0xad,0x3e,0x12,0x5a,0x9b,0xd2,0x67,0x89,0x59,
0xf0,0xf1,0x04,0xd9,0x01,0x2f,0xd5,0xc4,0x79,0x4c,0xad,0x6a,0xb1,0x49,0x3f,0x99,
0x83,0xe2,0x3c,0xa2,0xd8,0x25,0xca,0x10,0xef,0xfd,0xec,0x61,0x99,0xc4,0x6b,0x2b,
0xb4,0x42,0x03,0x75,0x20,0xe9,0x1e,0x3c,0xc1,0xea,0x9b,0x4d,0x99,0x47,0xac,0x6c,
}};

BOOST_AUTO_TEST_CASE( base64_rfc1421 ) {
  std::string expected(
"c5is3UfNsKEG27ZE5rZ0JaGoGyzFsz0BkN+uwQSBXQY8pfZb7yM+HQ8uE6aEi3jQ\x0d\x0a"
"rNMcwFReE0er5XUqE1MFTiA3RLDzHua3If/XIWoo4Unrn1IfQEny3JfnHWPmA3Y8\x0d\x0a"
"0fq6rWnN4yXQGRR7GSZuCug5Nhp61JqnDPJGnZEdukNVzkCgVNUiI7YT1BfKxdC4\x0d\x0a"
"sulsMexV91BfQSXRmf7YiYCAdpPUtrnQCfNwSejFmOeR75A5IuTCCUTGEAGr4lry\x0d\x0a"
"uEUVBQub08MWTTTt8a7yEzrCpCBxCZhlsyo5dM9Vdi9pm6H2D0KFS5d7f71WO6L9\x0d\x0a"
"Xxjb/GGxoLrjv2Rmdkzf68IfOBCkGiv4WfJ7jDoigv33rFGqjDiSKBDnJKan6y3x\x0d\x0a"
"cCZxt9Mo12j8SmjUvcHl//xrp0MGjMXx7CdoaJ96K7RZit7D/xGFGaJVW+z85YNY\x0d\x0a"
"HPBK0xmRzTkGkHFbWEaiaHVB6M4tuz+dW2+DgCFiDe24forkK57EKPs5q/X1Ojnx\x0d\x0a"
"GqK3pXIQ207owQuvx2vf6B4WTCBTQM/HGAJdjdvDVkFUbx3aP5CzURGZYwHOk8wm\x0d\x0a"
"nx1fwaLMFAZYuEP9VmxgCaj3CGOFIDA3rgM63D1GldpKzeLpIzyraiW8o6bN5D+6\x0d\x0a"
"Dm/aVGNQjlFouwd/I8pk2aSHMbiOtBJiC4SfaCg+7uitxl3EC2TLSF/2y22w+FqJ\x0d\x0a"
"h1FPkJ3455L4m+cg7+gc+BrglfR7XkoFzIZMGZWXQU6dGi0iSaKi5Rwm6lbeHv7Z\x0d\x0a"
"qfBLTfTVHsWXY9GB3RIViMlLx+Db06IEDi91zPQxcrArmbtmsXaHLujNncqMxlS1\x0d\x0a"
"B2XJBDN3Wxhlm6tIeju8Vgr+doGzPNutRdpuswInVsKc3b5BwhzpKZRmIgWspFdX\x0d\x0a"
"BhlrYlCQaBX8U8QFb8ri2r2znyxpxdZr5Ndi1hqh3ml3arFiF5JVXlByZ1CcorGa\x0d\x0a"
"puZnLlinBeVHavBtML1xLWrqLayJr/Ey9Y/DD+//mSu66bCslIE9CmuE7l+itJNm\x0d\x0a"
"PMXwI4WL2N+BGMq4OWMPshSKLw99N/hjpwbA72FH9HzSdN1NcRx4yqufLD0Q6nHV\x0d\x0a"
"Tv+0jB0F03XiY+0rTLIIqrKpG2/+nPF/D2HQlCOXJBcFVaaSsGzIqUMoNBTT9r9f\x0d\x0a"
"fshwon4cCgBtlkPbKIqqrmBfx8diMep/BaWjlWbTW55pEciD07upZFKTKbcRSKgq\x0d\x0a"
"56qiSyy+6wWu2zFOLpXt9vAv4GEtx22am9Iq+cZUgO1PYkN81QDjJVsW/gWvFEy6\x0d\x0a"
"iKbglmCdP60+Elqb0meJWfDxBNkBL9XEeUytarFJP5mD4jyi2CXKEO/97GGZxGsr\x0d\x0a"
"tEIDdSDpHjzB6ptNmUesbA=="
  );
  BOOST_CHECK( boost::equal( expected, random_data|twist::range::adaptor::encode_base64< twist::base64::rfc1421 >() ) );
  BOOST_CHECK(
    boost::equal(
      random_data,
      random_data|
      twist::range::adaptor::encode_base64< twist::base64::rfc1421 >()|
      twist::range::adaptor::decode_base64< twist::base64::rfc1421 >()
    )
  );
}

BOOST_AUTO_TEST_CASE( base64_rfc2045 ) {
  std::string expected(
"c5is3UfNsKEG27ZE5rZ0JaGoGyzFsz0BkN+uwQSBXQY8pfZb7yM+HQ8uE6aEi3jQrNMcwFReE0er\x0d\x0a"
"5XUqE1MFTiA3RLDzHua3If/XIWoo4Unrn1IfQEny3JfnHWPmA3Y80fq6rWnN4yXQGRR7GSZuCug5\x0d\x0a"
"Nhp61JqnDPJGnZEdukNVzkCgVNUiI7YT1BfKxdC4sulsMexV91BfQSXRmf7YiYCAdpPUtrnQCfNw\x0d\x0a"
"SejFmOeR75A5IuTCCUTGEAGr4lryuEUVBQub08MWTTTt8a7yEzrCpCBxCZhlsyo5dM9Vdi9pm6H2\x0d\x0a"
"D0KFS5d7f71WO6L9Xxjb/GGxoLrjv2Rmdkzf68IfOBCkGiv4WfJ7jDoigv33rFGqjDiSKBDnJKan\x0d\x0a"
"6y3xcCZxt9Mo12j8SmjUvcHl//xrp0MGjMXx7CdoaJ96K7RZit7D/xGFGaJVW+z85YNYHPBK0xmR\x0d\x0a"
"zTkGkHFbWEaiaHVB6M4tuz+dW2+DgCFiDe24forkK57EKPs5q/X1OjnxGqK3pXIQ207owQuvx2vf\x0d\x0a"
"6B4WTCBTQM/HGAJdjdvDVkFUbx3aP5CzURGZYwHOk8wmnx1fwaLMFAZYuEP9VmxgCaj3CGOFIDA3\x0d\x0a"
"rgM63D1GldpKzeLpIzyraiW8o6bN5D+6Dm/aVGNQjlFouwd/I8pk2aSHMbiOtBJiC4SfaCg+7uit\x0d\x0a"
"xl3EC2TLSF/2y22w+FqJh1FPkJ3455L4m+cg7+gc+BrglfR7XkoFzIZMGZWXQU6dGi0iSaKi5Rwm\x0d\x0a"
"6lbeHv7ZqfBLTfTVHsWXY9GB3RIViMlLx+Db06IEDi91zPQxcrArmbtmsXaHLujNncqMxlS1B2XJ\x0d\x0a"
"BDN3Wxhlm6tIeju8Vgr+doGzPNutRdpuswInVsKc3b5BwhzpKZRmIgWspFdXBhlrYlCQaBX8U8QF\x0d\x0a"
"b8ri2r2znyxpxdZr5Ndi1hqh3ml3arFiF5JVXlByZ1CcorGapuZnLlinBeVHavBtML1xLWrqLayJ\x0d\x0a"
"r/Ey9Y/DD+//mSu66bCslIE9CmuE7l+itJNmPMXwI4WL2N+BGMq4OWMPshSKLw99N/hjpwbA72FH\x0d\x0a"
"9HzSdN1NcRx4yqufLD0Q6nHVTv+0jB0F03XiY+0rTLIIqrKpG2/+nPF/D2HQlCOXJBcFVaaSsGzI\x0d\x0a"
"qUMoNBTT9r9ffshwon4cCgBtlkPbKIqqrmBfx8diMep/BaWjlWbTW55pEciD07upZFKTKbcRSKgq\x0d\x0a"
"56qiSyy+6wWu2zFOLpXt9vAv4GEtx22am9Iq+cZUgO1PYkN81QDjJVsW/gWvFEy6iKbglmCdP60+\x0d\x0a"
"Elqb0meJWfDxBNkBL9XEeUytarFJP5mD4jyi2CXKEO/97GGZxGsrtEIDdSDpHjzB6ptNmUesbA=="
  );
  BOOST_CHECK( boost::equal( expected, random_data|twist::range::adaptor::encode_base64< twist::base64::rfc2045 >() ) );
  BOOST_CHECK(
    boost::equal(
      random_data,
      random_data|
      twist::range::adaptor::encode_base64< twist::base64::rfc2045 >()|
      twist::range::adaptor::decode_base64< twist::base64::rfc2045 >()
    )
  );
}

BOOST_AUTO_TEST_CASE( base64_rfc3548 ) {
  std::string expected(
"c5is3UfNsKEG27ZE5rZ0JaGoGyzFsz0BkN+uwQSBXQY8pfZb7yM+HQ8uE6aEi3jQrNMcwFReE0er\x0d\x0a"
"5XUqE1MFTiA3RLDzHua3If/XIWoo4Unrn1IfQEny3JfnHWPmA3Y80fq6rWnN4yXQGRR7GSZuCug5\x0d\x0a"
"Nhp61JqnDPJGnZEdukNVzkCgVNUiI7YT1BfKxdC4sulsMexV91BfQSXRmf7YiYCAdpPUtrnQCfNw\x0d\x0a"
"SejFmOeR75A5IuTCCUTGEAGr4lryuEUVBQub08MWTTTt8a7yEzrCpCBxCZhlsyo5dM9Vdi9pm6H2\x0d\x0a"
"D0KFS5d7f71WO6L9Xxjb/GGxoLrjv2Rmdkzf68IfOBCkGiv4WfJ7jDoigv33rFGqjDiSKBDnJKan\x0d\x0a"
"6y3xcCZxt9Mo12j8SmjUvcHl//xrp0MGjMXx7CdoaJ96K7RZit7D/xGFGaJVW+z85YNYHPBK0xmR\x0d\x0a"
"zTkGkHFbWEaiaHVB6M4tuz+dW2+DgCFiDe24forkK57EKPs5q/X1OjnxGqK3pXIQ207owQuvx2vf\x0d\x0a"
"6B4WTCBTQM/HGAJdjdvDVkFUbx3aP5CzURGZYwHOk8wmnx1fwaLMFAZYuEP9VmxgCaj3CGOFIDA3\x0d\x0a"
"rgM63D1GldpKzeLpIzyraiW8o6bN5D+6Dm/aVGNQjlFouwd/I8pk2aSHMbiOtBJiC4SfaCg+7uit\x0d\x0a"
"xl3EC2TLSF/2y22w+FqJh1FPkJ3455L4m+cg7+gc+BrglfR7XkoFzIZMGZWXQU6dGi0iSaKi5Rwm\x0d\x0a"
"6lbeHv7ZqfBLTfTVHsWXY9GB3RIViMlLx+Db06IEDi91zPQxcrArmbtmsXaHLujNncqMxlS1B2XJ\x0d\x0a"
"BDN3Wxhlm6tIeju8Vgr+doGzPNutRdpuswInVsKc3b5BwhzpKZRmIgWspFdXBhlrYlCQaBX8U8QF\x0d\x0a"
"b8ri2r2znyxpxdZr5Ndi1hqh3ml3arFiF5JVXlByZ1CcorGapuZnLlinBeVHavBtML1xLWrqLayJ\x0d\x0a"
"r/Ey9Y/DD+//mSu66bCslIE9CmuE7l+itJNmPMXwI4WL2N+BGMq4OWMPshSKLw99N/hjpwbA72FH\x0d\x0a"
"9HzSdN1NcRx4yqufLD0Q6nHVTv+0jB0F03XiY+0rTLIIqrKpG2/+nPF/D2HQlCOXJBcFVaaSsGzI\x0d\x0a"
"qUMoNBTT9r9ffshwon4cCgBtlkPbKIqqrmBfx8diMep/BaWjlWbTW55pEciD07upZFKTKbcRSKgq\x0d\x0a"
"56qiSyy+6wWu2zFOLpXt9vAv4GEtx22am9Iq+cZUgO1PYkN81QDjJVsW/gWvFEy6iKbglmCdP60+\x0d\x0a"
"Elqb0meJWfDxBNkBL9XEeUytarFJP5mD4jyi2CXKEO/97GGZxGsrtEIDdSDpHjzB6ptNmUesbA=="
  );
  BOOST_CHECK( boost::equal( expected, random_data|twist::range::adaptor::encode_base64< twist::base64::rfc3548 >() ) );
  BOOST_CHECK(
    boost::equal(
      random_data,
      random_data|
      twist::range::adaptor::encode_base64< twist::base64::rfc3548 >()|
      twist::range::adaptor::decode_base64< twist::base64::rfc3548 >()
    )
  );
}

BOOST_AUTO_TEST_CASE( base64_rfc4648 ) {
  std::string expected(
"c5is3UfNsKEG27ZE5rZ0JaGoGyzFsz0BkN+uwQSBXQY8pfZb7yM+HQ8uE6aEi3jQrNMcwFReE0er\x0d\x0a"
"5XUqE1MFTiA3RLDzHua3If/XIWoo4Unrn1IfQEny3JfnHWPmA3Y80fq6rWnN4yXQGRR7GSZuCug5\x0d\x0a"
"Nhp61JqnDPJGnZEdukNVzkCgVNUiI7YT1BfKxdC4sulsMexV91BfQSXRmf7YiYCAdpPUtrnQCfNw\x0d\x0a"
"SejFmOeR75A5IuTCCUTGEAGr4lryuEUVBQub08MWTTTt8a7yEzrCpCBxCZhlsyo5dM9Vdi9pm6H2\x0d\x0a"
"D0KFS5d7f71WO6L9Xxjb/GGxoLrjv2Rmdkzf68IfOBCkGiv4WfJ7jDoigv33rFGqjDiSKBDnJKan\x0d\x0a"
"6y3xcCZxt9Mo12j8SmjUvcHl//xrp0MGjMXx7CdoaJ96K7RZit7D/xGFGaJVW+z85YNYHPBK0xmR\x0d\x0a"
"zTkGkHFbWEaiaHVB6M4tuz+dW2+DgCFiDe24forkK57EKPs5q/X1OjnxGqK3pXIQ207owQuvx2vf\x0d\x0a"
"6B4WTCBTQM/HGAJdjdvDVkFUbx3aP5CzURGZYwHOk8wmnx1fwaLMFAZYuEP9VmxgCaj3CGOFIDA3\x0d\x0a"
"rgM63D1GldpKzeLpIzyraiW8o6bN5D+6Dm/aVGNQjlFouwd/I8pk2aSHMbiOtBJiC4SfaCg+7uit\x0d\x0a"
"xl3EC2TLSF/2y22w+FqJh1FPkJ3455L4m+cg7+gc+BrglfR7XkoFzIZMGZWXQU6dGi0iSaKi5Rwm\x0d\x0a"
"6lbeHv7ZqfBLTfTVHsWXY9GB3RIViMlLx+Db06IEDi91zPQxcrArmbtmsXaHLujNncqMxlS1B2XJ\x0d\x0a"
"BDN3Wxhlm6tIeju8Vgr+doGzPNutRdpuswInVsKc3b5BwhzpKZRmIgWspFdXBhlrYlCQaBX8U8QF\x0d\x0a"
"b8ri2r2znyxpxdZr5Ndi1hqh3ml3arFiF5JVXlByZ1CcorGapuZnLlinBeVHavBtML1xLWrqLayJ\x0d\x0a"
"r/Ey9Y/DD+//mSu66bCslIE9CmuE7l+itJNmPMXwI4WL2N+BGMq4OWMPshSKLw99N/hjpwbA72FH\x0d\x0a"
"9HzSdN1NcRx4yqufLD0Q6nHVTv+0jB0F03XiY+0rTLIIqrKpG2/+nPF/D2HQlCOXJBcFVaaSsGzI\x0d\x0a"
"qUMoNBTT9r9ffshwon4cCgBtlkPbKIqqrmBfx8diMep/BaWjlWbTW55pEciD07upZFKTKbcRSKgq\x0d\x0a"
"56qiSyy+6wWu2zFOLpXt9vAv4GEtx22am9Iq+cZUgO1PYkN81QDjJVsW/gWvFEy6iKbglmCdP60+\x0d\x0a"
"Elqb0meJWfDxBNkBL9XEeUytarFJP5mD4jyi2CXKEO/97GGZxGsrtEIDdSDpHjzB6ptNmUesbA=="
  );
  BOOST_CHECK( boost::equal( expected, random_data|twist::range::adaptor::encode_base64< twist::base64::rfc4648 >() ) );
  BOOST_CHECK(
    boost::equal(
      random_data,
      random_data|
      twist::range::adaptor::encode_base64< twist::base64::rfc4648 >()|
      twist::range::adaptor::decode_base64< twist::base64::rfc4648 >()
    )
  );
}

BOOST_AUTO_TEST_CASE( base64_rfc4880 ) {
  std::string expected(
"c5is3UfNsKEG27ZE5rZ0JaGoGyzFsz0BkN+uwQSBXQY8pfZb7yM+HQ8uE6aEi3jQrNMcwFReE0er\x0d\x0a"
"5XUqE1MFTiA3RLDzHua3If/XIWoo4Unrn1IfQEny3JfnHWPmA3Y80fq6rWnN4yXQGRR7GSZuCug5\x0d\x0a"
"Nhp61JqnDPJGnZEdukNVzkCgVNUiI7YT1BfKxdC4sulsMexV91BfQSXRmf7YiYCAdpPUtrnQCfNw\x0d\x0a"
"SejFmOeR75A5IuTCCUTGEAGr4lryuEUVBQub08MWTTTt8a7yEzrCpCBxCZhlsyo5dM9Vdi9pm6H2\x0d\x0a"
"D0KFS5d7f71WO6L9Xxjb/GGxoLrjv2Rmdkzf68IfOBCkGiv4WfJ7jDoigv33rFGqjDiSKBDnJKan\x0d\x0a"
"6y3xcCZxt9Mo12j8SmjUvcHl//xrp0MGjMXx7CdoaJ96K7RZit7D/xGFGaJVW+z85YNYHPBK0xmR\x0d\x0a"
"zTkGkHFbWEaiaHVB6M4tuz+dW2+DgCFiDe24forkK57EKPs5q/X1OjnxGqK3pXIQ207owQuvx2vf\x0d\x0a"
"6B4WTCBTQM/HGAJdjdvDVkFUbx3aP5CzURGZYwHOk8wmnx1fwaLMFAZYuEP9VmxgCaj3CGOFIDA3\x0d\x0a"
"rgM63D1GldpKzeLpIzyraiW8o6bN5D+6Dm/aVGNQjlFouwd/I8pk2aSHMbiOtBJiC4SfaCg+7uit\x0d\x0a"
"xl3EC2TLSF/2y22w+FqJh1FPkJ3455L4m+cg7+gc+BrglfR7XkoFzIZMGZWXQU6dGi0iSaKi5Rwm\x0d\x0a"
"6lbeHv7ZqfBLTfTVHsWXY9GB3RIViMlLx+Db06IEDi91zPQxcrArmbtmsXaHLujNncqMxlS1B2XJ\x0d\x0a"
"BDN3Wxhlm6tIeju8Vgr+doGzPNutRdpuswInVsKc3b5BwhzpKZRmIgWspFdXBhlrYlCQaBX8U8QF\x0d\x0a"
"b8ri2r2znyxpxdZr5Ndi1hqh3ml3arFiF5JVXlByZ1CcorGapuZnLlinBeVHavBtML1xLWrqLayJ\x0d\x0a"
"r/Ey9Y/DD+//mSu66bCslIE9CmuE7l+itJNmPMXwI4WL2N+BGMq4OWMPshSKLw99N/hjpwbA72FH\x0d\x0a"
"9HzSdN1NcRx4yqufLD0Q6nHVTv+0jB0F03XiY+0rTLIIqrKpG2/+nPF/D2HQlCOXJBcFVaaSsGzI\x0d\x0a"
"qUMoNBTT9r9ffshwon4cCgBtlkPbKIqqrmBfx8diMep/BaWjlWbTW55pEciD07upZFKTKbcRSKgq\x0d\x0a"
"56qiSyy+6wWu2zFOLpXt9vAv4GEtx22am9Iq+cZUgO1PYkN81QDjJVsW/gWvFEy6iKbglmCdP60+\x0d\x0a"
"Elqb0meJWfDxBNkBL9XEeUytarFJP5mD4jyi2CXKEO/97GGZxGsrtEIDdSDpHjzB6ptNmUesbA==\x0d\x0a"
"=/XiP"
  );
  BOOST_CHECK( boost::equal( expected, random_data|twist::range::adaptor::encode_base64< twist::base64::rfc4880 >() ) );
  BOOST_CHECK(
    boost::equal(
      random_data,
      random_data|
      twist::range::adaptor::encode_base64< twist::base64::rfc4880 >()|
      twist::range::adaptor::decode_base64< twist::base64::rfc4880 >()
    )
  );
}

BOOST_AUTO_TEST_CASE( base64_utf7 ) {
  std::string expected(
"c5is3UfNsKEG27ZE5rZ0JaGoGyzFsz0BkN+uwQSBXQY8pfZb7yM+HQ8uE6aEi3jQrNMcwFReE0er5XUqE1MFTiA3RLDzHua3If/XIWoo4Unrn1IfQEny3JfnHWPmA3Y80fq6rWnN4yXQGRR7GSZuCug5Nhp61JqnDPJGnZEdukNVzkCgVNUiI7YT1BfKxdC4sulsMexV91BfQSXRmf7YiYCAdpPUtrnQCfNwSejFmOeR75A5IuTCCUTGEAGr4lryuEUVBQub08MWTTTt8a7yEzrCpCBxCZhlsyo5dM9Vdi9pm6H2D0KFS5d7f71WO6L9Xxjb/GGxoLrjv2Rmdkzf68IfOBCkGiv4WfJ7jDoigv33rFGqjDiSKBDnJKan6y3xcCZxt9Mo12j8SmjUvcHl//xrp0MGjMXx7CdoaJ96K7RZit7D/xGFGaJVW+z85YNYHPBK0xmRzTkGkHFbWEaiaHVB6M4tuz+dW2+DgCFiDe24forkK57EKPs5q/X1OjnxGqK3pXIQ207owQuvx2vf6B4WTCBTQM/HGAJdjdvDVkFUbx3aP5CzURGZYwHOk8wmnx1fwaLMFAZYuEP9VmxgCaj3CGOFIDA3rgM63D1GldpKzeLpIzyraiW8o6bN5D+6Dm/aVGNQjlFouwd/I8pk2aSHMbiOtBJiC4SfaCg+7uitxl3EC2TLSF/2y22w+FqJh1FPkJ3455L4m+cg7+gc+BrglfR7XkoFzIZMGZWXQU6dGi0iSaKi5Rwm6lbeHv7ZqfBLTfTVHsWXY9GB3RIViMlLx+Db06IEDi91zPQxcrArmbtmsXaHLujNncqMxlS1B2XJBDN3Wxhlm6tIeju8Vgr+doGzPNutRdpuswInVsKc3b5BwhzpKZRmIgWspFdXBhlrYlCQaBX8U8QFb8ri2r2znyxpxdZr5Ndi1hqh3ml3arFiF5JVXlByZ1CcorGapuZnLlinBeVHavBtML1xLWrqLayJr/Ey9Y/DD+//mSu66bCslIE9CmuE7l+itJNmPMXwI4WL2N+BGMq4OWMPshSKLw99N/hjpwbA72FH9HzSdN1NcRx4yqufLD0Q6nHVTv+0jB0F03XiY+0rTLIIqrKpG2/+nPF/D2HQlCOXJBcFVaaSsGzIqUMoNBTT9r9ffshwon4cCgBtlkPbKIqqrmBfx8diMep/BaWjlWbTW55pEciD07upZFKTKbcRSKgq56qiSyy+6wWu2zFOLpXt9vAv4GEtx22am9Iq+cZUgO1PYkN81QDjJVsW/gWvFEy6iKbglmCdP60+Elqb0meJWfDxBNkBL9XEeUytarFJP5mD4jyi2CXKEO/97GGZxGsrtEIDdSDpHjzB6ptNmUesbA"
  );
  BOOST_CHECK( boost::equal( expected, random_data|twist::range::adaptor::encode_base64< twist::base64::utf7 >() ) );
  BOOST_CHECK(
    boost::equal(
      random_data,
      random_data|
      twist::range::adaptor::encode_base64< twist::base64::utf7 >()|
      twist::range::adaptor::decode_base64< twist::base64::utf7 >()
    )
  );
}

BOOST_AUTO_TEST_CASE( base64_url ) {
  std::string expected(
"c5is3UfNsKEG27ZE5rZ0JaGoGyzFsz0BkN-uwQSBXQY8pfZb7yM-HQ8uE6aEi3jQrNMcwFReE0er5XUqE1MFTiA3RLDzHua3If_XIWoo4Unrn1IfQEny3JfnHWPmA3Y80fq6rWnN4yXQGRR7GSZuCug5Nhp61JqnDPJGnZEdukNVzkCgVNUiI7YT1BfKxdC4sulsMexV91BfQSXRmf7YiYCAdpPUtrnQCfNwSejFmOeR75A5IuTCCUTGEAGr4lryuEUVBQub08MWTTTt8a7yEzrCpCBxCZhlsyo5dM9Vdi9pm6H2D0KFS5d7f71WO6L9Xxjb_GGxoLrjv2Rmdkzf68IfOBCkGiv4WfJ7jDoigv33rFGqjDiSKBDnJKan6y3xcCZxt9Mo12j8SmjUvcHl__xrp0MGjMXx7CdoaJ96K7RZit7D_xGFGaJVW-z85YNYHPBK0xmRzTkGkHFbWEaiaHVB6M4tuz-dW2-DgCFiDe24forkK57EKPs5q_X1OjnxGqK3pXIQ207owQuvx2vf6B4WTCBTQM_HGAJdjdvDVkFUbx3aP5CzURGZYwHOk8wmnx1fwaLMFAZYuEP9VmxgCaj3CGOFIDA3rgM63D1GldpKzeLpIzyraiW8o6bN5D-6Dm_aVGNQjlFouwd_I8pk2aSHMbiOtBJiC4SfaCg-7uitxl3EC2TLSF_2y22w-FqJh1FPkJ3455L4m-cg7-gc-BrglfR7XkoFzIZMGZWXQU6dGi0iSaKi5Rwm6lbeHv7ZqfBLTfTVHsWXY9GB3RIViMlLx-Db06IEDi91zPQxcrArmbtmsXaHLujNncqMxlS1B2XJBDN3Wxhlm6tIeju8Vgr-doGzPNutRdpuswInVsKc3b5BwhzpKZRmIgWspFdXBhlrYlCQaBX8U8QFb8ri2r2znyxpxdZr5Ndi1hqh3ml3arFiF5JVXlByZ1CcorGapuZnLlinBeVHavBtML1xLWrqLayJr_Ey9Y_DD-__mSu66bCslIE9CmuE7l-itJNmPMXwI4WL2N-BGMq4OWMPshSKLw99N_hjpwbA72FH9HzSdN1NcRx4yqufLD0Q6nHVTv-0jB0F03XiY-0rTLIIqrKpG2_-nPF_D2HQlCOXJBcFVaaSsGzIqUMoNBTT9r9ffshwon4cCgBtlkPbKIqqrmBfx8diMep_BaWjlWbTW55pEciD07upZFKTKbcRSKgq56qiSyy-6wWu2zFOLpXt9vAv4GEtx22am9Iq-cZUgO1PYkN81QDjJVsW_gWvFEy6iKbglmCdP60-Elqb0meJWfDxBNkBL9XEeUytarFJP5mD4jyi2CXKEO_97GGZxGsrtEIDdSDpHjzB6ptNmUesbA"
  );
  BOOST_CHECK( boost::equal( expected, random_data|twist::range::adaptor::encode_base64< twist::base64::url >() ) );
  BOOST_CHECK(
    boost::equal(
      random_data,
      random_data|
      twist::range::adaptor::encode_base64< twist::base64::url >()|
      twist::range::adaptor::decode_base64< twist::base64::url >()
    )
  );
}

